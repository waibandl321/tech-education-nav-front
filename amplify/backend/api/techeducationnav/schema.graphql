# This "input" configures a global authorization rule to enable public access to
# all models in this schema. Learn more about authorization rules here: https://docs.amplify.aws/cli/graphql/authorization-rules

# 開発領域（関わりたい開発領域で絞り込む際に使用する）
type DevelopmentCategory
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admin"], operations: [create, update, delete] }
    ]
  ) {
  id: ID!
  name: String!
  memo: String!
}

# 開発できるプロダクト（作りたいサービスで絞り込むために使用する）
type DevelopmentProduct
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admin"], operations: [create, update, delete] }
    ]
  ) {
  id: ID!
  name: String!
  memo: String!
}

# 資格マスタ
type Qualification
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admin"], operations: [create, update, delete] }
    ]
  ) {
  id: ID!
  name: String!
}

# 開発ツールマスタ
type DevelopmentTool
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admin"], operations: [create, update, delete] }
    ]
  ) {
  id: ID!
  name: String!
}

# プログラミング言語マスタ
type ProgrammingLanguage
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admin"], operations: [create, update, delete] }
    ]
  ) {
  id: ID!
  name: String!
}

# 支払い方法マスタ
type PaymentMethod
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admin"], operations: [create, update, delete] }
    ]
  ) {
  id: ID!
  name: String!
}

# クレジットカードマスタ
type CreditCard
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admin"], operations: [create, update, delete] }
    ]
  ) {
  id: ID!
  name: String!
}

# フレームワークマスタ（プログラミング言語とは紐付けない）
type Framework
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admin"], operations: [create, update, delete] }
    ]
  ) {
  id: ID!
  programmingLanguageId: ID
  name: String!
}

# 職種マスタ
type JobType
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admin"], operations: [create, update, delete] }
    ]
  ) {
  id: ID!
  name: String!
}

# 優待ユーザー種別 マスタ
type BenefitUserCategory
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admin"], operations: [create, update, delete] }
    ]
  ) {
  id: ID!
  name: String!
}

# プログラミングスクール情報
type LearningCenter
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admin"], operations: [create, update, delete] }
    ]
  ) {
  id: ID!
  name: String
  memo: String
  operatingCompany: String
  headquartersLocation: String
  websiteURL: String
  logoImageURL: String
  establishmentYear: Int
  representative: String
  admissionFee: Float # 入学金
  cancelPolicy: String # キャンセルポリシー詳細
  paymentOptions: [String] # 支払い方法（PaymentMethodマスタのIDを格納する）
  creditCards: [String] # 対応しているクレジットカード（CreditCardマスタのIDを格納する）
  isDeleted: Boolean
}

# 受講スタイルのenum
enum AttendanceType {
  ONLINE # オンライン
  OFFLINE # オフライン
  HYBRID # どちらもOK
}

# 受講目的
enum Purpose {
  JOB # 就職/転職
  FREELANCE #フリーランス
  ENTREPRENEURSHIP # 起業
  SIDE_JOB # 副業
  CERTIFICATION # 資格取得
  LEARNING # 学習/スキルアップ
}

# コースに紐づく料金プラン
type CoursePlan {
  id: ID!
  planName: String # プラン名
  planMemo: String # プラン備考
  duration: Int # 受講期間（単位: ヶ月）
  price: Float # 料金
  splitPrice: Float # 分割払いの金額（月額）
}

# プログラミングスクールのコース情報
type LearningCenterCourse
  @model
  @auth(
    rules: [
      { allow: public, operations: [read] }
      { allow: groups, groups: ["Admin"], operations: [create, update, delete] }
    ]
  ) {
  id: ID!
  learningCenterId: ID! # スクールID
  courseName: String # コース名
  courseURL: String # 公式サイトURL
  couseDetail: String # コース詳細
  plans: [CoursePlan] # プラン一覧
  isAvailableMoneyBack: Boolean # 返金保証の有無
  moneyBackDetail: String # 返金保証の有無 詳細
  isAvailableSubsidy: Boolean # 補助金の有無
  subsidyMemo: String # 補助金の有無 詳細
  isMadeToOrder: Boolean # オーダーメイドカリキュラムの有無
  madeToOrderDetail: String # オーダーメイドカリキュラムの詳細
  isJobIntroductionAvailable: Boolean # 案件紹介の有無
  jobIntroductionDetail: String # 案件紹介の詳細
  isJobHuntingSupport: Boolean # 転職サポートの有無
  jobHuntingSupportDetail: String # 転職サポートの詳細
  isJobHuntingGuarantee: Boolean # 転職保証の有無
  jobHuntingGuaranteeDetail: String # 転職保証の詳細
  purposes: [Purpose] # 受講目的（選択形式）
  jobTypes: [String] # 目指す職種（jobTypeのマスタデータのIDを格納する)
  developmentCategories: [String] # 開発領域（ホームページ制作、WEBサービス開発、スマホアプリ開発、、、など DevelopmentCategoryマスタのIDを格納する）
  developmentProducts: [String] # 開発できる商品（マッチングアプリ、掲示板アプリ、、、など DevelopmentProductマスタのIDを格納する）
  programmingLanguages: [String] # 学べるプログラミング言語（ProgrammingLanguageマスタのIDを格納する）
  frameworks: [String] # 学べるフレームワーク（FrameworkマスタのIDを格納する）
  developmentTools: [String] # 開発用の各種ツール（DevelopmentToolマスタのIDを格納する）
  qualifications: [String] # 取得できる資格（QualificationマスタのIDを格納）
  attendanceType: AttendanceType # 受講スタイル（選択形式）
  locationPref: String # オフラインの場合の場所（県、エリア検索用）
  locationCity: String # オフラインの場合の場所（市区町村、エリア検索用）
  benefitUsers: [String] # 優待対象のユーザー（例: 女性向け、50歳以上など） BenefitUserマスタのIDが格納される
  isDeleted: Boolean
}

type CourseReview
  @model
  @auth(
    rules: [
      { allow: public, operations: [read, create] }
      { allow: groups, groups: ["Admin"], operations: [read, update, delete] }
    ]
  ) {
  id: ID!
  userDisplayId: String
  userGender: String!
  userAge: String!
  userPrefecture: String!
  studyLengthMonths: Int!
  learningCenterId: ID!
  learningCenterCourseId: ID!
  reviewTitle: String!
  reviewDetail: String!
  rating: Int!
  isPublished: Boolean!
  isDeleted: Boolean
}

type Contact
  @model
  @auth(
    rules: [
      { allow: public, operations: [create] }
      {
        allow: groups
        groups: ["Admin"]
        operations: [create, read, update, delete]
      }
    ]
  ) {
  id: ID!
  userEmail: String!
  userName: String!
  messageInfo: String!
}
